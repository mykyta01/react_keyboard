{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleKeyUp","event","setState","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMMA,E,4MACJC,MAAkB,CAChBC,WAAY,I,EAWdC,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEH,WAAYE,EAAME,O,uDATpC,WACEC,SAASC,iBAAiB,QAASC,KAAKN,e,kCAG1C,WACEI,SAASG,oBAAoB,QAASD,KAAKN,e,oBAO7C,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGT,EAAU,mCACqBA,EADrB,KAEP,kC,GAzBIU,aAgCHZ,I,MCjCfa,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.46dd137c.chunk.js","sourcesContent":["import { Component } from 'react';\n\ninterface AppState {\n  pressedKey: string;\n}\n\nclass App extends Component<{}, AppState> {\n  state: AppState = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  handleKeyUp = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {pressedKey\n            ? `The last pressed key is [${pressedKey}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}